# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs


name: Node.js application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js 14.x
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'

    - name: Install dependencies
      run: |
        npm install

    - name: Run tests
      run: |
        npm test

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # If you need to set up QEMU and Docker Buildx for multi-platform builds, add those steps here

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build 
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/node-hello
      - name: Docker Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/node-hello




  modifygit:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: 'Anjum45467/node.js-App-Manifest'
          token: ${{ secrets.GIT_PASSWORD }}

      - name: Modify deployment.yaml
        run: |
          sed -i "s+anjum1234/node-hello.*+anjum1234/node-hello:app-${{ github.run_number }}+g" deployment.yaml
          git add deployment.yaml
          git config user.email anjummulla48@gmail.com
          git config user.name anjummulla
          git commit -m "Update image tag by GitHub Actions Job: ${{ github.run_number }}"
          git push origin main
        env:
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
